version: '3.7'

volumes:
  postgres_data:
    driver: local
  mongo_data:
  notused:

networks:
  backend:

services:
  postgres:
    container_name: codever-postgres
    image: postgres
    networks:
      - backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
    container_name: codever-keycloak
    image: jboss/keycloak:12.0.4
    networks:
      - backend
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    ports:
      - 8480:8080
    depends_on:
      - postgres
    #command: -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak/export-import #export data
    #command: -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak/export-import -Dkeycloak.migration.strategy=IGNORE_EXISTING #import data
    volumes:
      - ./docker-compose-setup/keycloak-export-import:/tmp/keycloak/export-import/
  mongo:
    image: mongo:3.4
    container_name: codever-mongo
    networks:
      - backend
    environment:
      - MONGO_INITDB_DATABASE=dev-bookmarks
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - 27017:27017
    volumes:
      - ./docker-compose-setup/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo_data:/data/db
