version: '3.7'

volumes:
  mysql_data:
    driver: local
  mongo_data:
  notused:

networks:
  backend:

services:
  mysql:
    container_name: codever-mysql
    image: mysql:5.7
    networks:
      - backend
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
  keycloak:
    container_name: codever-keycloak
    image: jboss/keycloak:12.0.4
    networks:
      - backend
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    ports:
      - 8480:8080
    depends_on:
      - mysql
    #command: -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak/export-import
    #command: -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak/export-import -Dkeycloak.migration.strategy=OVERWRITE_EXISTING
    volumes:
      - ./docker-compose-setup/keycloak-export-import:/tmp/keycloak/export-import/
      - ./apps/codever-keycloak-theme/codever/:/opt/jboss/keycloak/themes/codever/
  mongo:
    image: mongo:3.4
    container_name: codever-mongo
    networks:
      - backend
    environment:
      - MONGO_INITDB_DATABASE=dev-bookmarks
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    ports:
      - 27017:27017
    volumes:
      - ./docker-compose-setup/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo_data:/data/db
